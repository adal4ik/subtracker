{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a service for aggregating user online subscriptions",
        "title": "Subscription Tracker API",
        "contact": {
            "name": "adal4ik",
            "url": "https://github.com/adal4ik/subtracker"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/subscriptions": {
            "get": {
                "description": "Gets a list of subscriptions with filtering and pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "List Subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by User ID (UUID)",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by Service Name",
                        "name": "service_name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by minimum price",
                        "name": "min_price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by maximum price",
                        "name": "max_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by start date (format: MM-YYYY)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by end date (format: MM-YYYY)",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by presence of an end date",
                        "name": "has_end_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination limit (default 10, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination offset (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SubscriptionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid filter parameters",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new subscription to the system based on the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Create Subscription",
                "parameters": [
                    {
                        "description": "Subscription Information",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or fields",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "409": {
                        "description": "Conflict if subscription with this ID already exists",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    }
                }
            }
        },
        "/subscriptions/cost": {
            "get": {
                "description": "Calculates the total cost of subscriptions for a user over a specified period.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Calculate Total Cost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (UUID format) for whom to calculate the cost",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start of the calculation period (format: MM-YYYY)",
                        "name": "period_start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End of the calculation period (format: MM-YYYY)",
                        "name": "period_end",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Optional: filter by a specific service name",
                        "name": "service_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CostResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or missing parameters",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}": {
            "get": {
                "description": "Retrieves a single subscription by its unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get Subscription by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing subscription's details by its ID. UserID cannot be changed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Update Subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format or request body",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a subscription by its unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Delete Subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID (UUID format)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apperrors.AppError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "err": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.CostResponse": {
            "type": "object",
            "properties": {
                "total_cost": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateSubscriptionRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "description": "может быть пустым",
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "start_date": {
                    "description": "\"MM-YYYY\"",
                    "type": "string"
                },
                "user_id": {
                    "description": "UUID в string",
                    "type": "string"
                }
            }
        },
        "dto.SubscriptionResponse": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateSubscriptionRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "response.APIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}